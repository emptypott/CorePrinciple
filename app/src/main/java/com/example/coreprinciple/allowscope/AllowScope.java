package com.example.coreprinciple.allowscope;

public class AllowScope {

    // 상속을 어디까지 어떻게 사용할 것인가.

    // 얼마전까지만 해도, 객체 지향의 장점은 상속을 사용할 수 있다는 점이다 --> 라는 논조가 지배적이었다.
    // 그러나 상속은 자칫 잘못 사용하면 많은 문제를 일으키게 된다.

    // 여기서는 주로 상속을 사용해서는 안되는 경우에 관하여 설명하겠다.

    // 상속으로 클래스를 재이용한다.

    // 얼마전까지 객체 지향의 장점으로 자주 언급된 것은 다음과 같은 점이었다.

    // ExtendedWindow 라는 클래스 이름 자체도 이상하지만, 그 문제는 일단 차치하기로 하고,

    // 그러나 잘 살펴보면 마치 여기저기서 천 조각을 주워 모아 만든 누더기 같이 보이지 않는가?

    // Extended Window 라는 클래스 이름 자체도 이상하지만, 그 문제는 일단 차치하기로 하고
    // 기존 프로그램에서 Window 를 요구할 때, ExtendedWindow 를 건네주면 과연 정상적으로 동작할 수 있을까?

    // 확장하는 것뿐이라면 모르겠지만.


}
